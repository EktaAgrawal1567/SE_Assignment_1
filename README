Name: Ekta Agrawal
Roll No: 2018201043

1. Implemented Features:

The arguments consists of flags(preceded by '-') and values(0 or more).
Args class perform 2 functions:
-> Parse the given schema
-> Determination of argument ids and population of the arguments into the corresponding Argument Marshaler.

ex: f,s*,n#,a##,p[*] is the schema
where f is for logging,s is for string,n for integer,a for double and p for string array.

if a flag is missing in the argument,then it should return false for boolean,0 for integer,0.0 for double,"" for string.


2. Execution format:
Run 'ant compile'
Run 'ant jar'
Run 'java -cp build/jar/args.jar com.cleancoder.args.ArgsMain'

To run tests:
Run 'java -cp "lib/junit-4.13.jar:lib/hamcrest-core-1.3.jar:build/jar/args.jar" ./test/com/cleancoder/args/ArgsTest.java testCreateWithNoSchemaOrArguments'

3. Process to clean the code:

-> As we can see Args class performs 2 functions: Parsing the schema and populating the arguments into corresponding marshaler.
Instead of having a single class, 2 extra classes namely Parser and ArgumentPopulater has been made.
-> Variables name and class names have been changed according to the function they are performing.
-> Comments have been added to get clear idea of what operation a module is performing.
-> Some test cases have been added that includes:
   checking :
        for fewer arguments than that in schema
        for 2 integers
        for 2 double
        for 2 string
        for string and integer
        for integer and double
        for double and string
